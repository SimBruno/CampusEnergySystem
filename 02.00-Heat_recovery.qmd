# Heat recovery {#sec:heat recovery}
In this section, EPFL heat supply is investigated. At first, the reference case is presented where heat is provided to EPFL at $T=65°C$. In this reference, all the heat is provided by a HP which heats up the lake water thanks to EPFL exiting heat flow.
Then in order to improve this system 3 scenarios are assessed:

- The use of the adjacent DataCenter to recover heat from the data center and preheat the lake water for the HP (while cooling the datacenter itself). 

- The use of an air ventilation system to preheat the air entering the EPFL heating system thanks to exiting EPFL heat flow (still in adition to the HP used in the reference case).

- The combination of the ventilation system and an external Air-Air HP to preheat the flow before reaching the HP of the reference case.

To summarize we can say each scenario is just a different way to preheat the water before reaching the HP of the reference case which itself is used to provide the heat flow at 65°C to the EPFL. 

The goal will be to compute costs (OPEX, CAPEX and TOTEX) in each scenario to asssess the most relevant one for EPFL.

## Reference case {#subsec:case-1}

```{r task-2-case-1, out.width='100%', fig.align='center', fig.cap='Reference case for heat supply', echo=F, fig.show='hold'}
#| label: fig-task-2-case-1
knitr::include_graphics('Figures/task_2_case_1.png')
```

For the reference case, heat is only supplied by the heat pumps for buildings at $T_{EPFL,medium}=338$ [K]. Considering heat pumps are already installed, there is no CAPEX. The only operational costs are the electricity cost for running the heat pumps. EPFL heat pumps take as cold source lake geneva which is at $T_{HP,high-in}=280 [K]$. The fixed return temperature to the lake is at $T_{HP,high-in}=276 [K]$. The fixed return temperature from the buildings is at $T_{EPFL,medium-out}=303$ [K]. The heat-pump is assumed to have a second law (exergetic) efficiency of $\epsilon=55\%$. Finally, the electricity cost is considered fixed at $C_{el}=0.2$ $[\dfrac{CHF}{kWh}]$.

Let's solve the following optimization problem, in order to obtain the less expansive solution:
\begin{array}{l}
\min{OPEX} \\
\text{ s.t.}\\
\end{array}

| Constraint type                            | Equation                                                                                                                   |
|--------------------------------------------|----------------------------------------------------------------------------------------------------------------------------|
| COST CONSTRAINTS                 |                                        |
| OPEX calculation                           | $OPEX=\sum_{t} C_{el} \cdot E(t) \cdot t_{op}(t)$                                                                          |
| MASS BALANCE                     |                                    |
| Heat supply to EPFL                        | $\dot{M}Cp_{EPFL}(t)\cdot (T_{EPFL,medium}-T_{EPFL,medium-out}) = \dfrac{Q_{heating}(t)}{t_{op}(t)} ~\forall t$            |
| MEETING HEATING DEMAND, ELECTRICAL CONSUMPTION                 |                                        |
| Heat transfer on lake side                 | $Q_{evap,ref}(t) = \dot{M}Cp_{Lake}(t) \cdot (T_{HP,high-in}-T_{HP,high-out})~\forall t$                                       |
| Heat transfer on EPFL side                 | $Q_{cond,ref}(t) = \dot{M}Cp_{EPFL}(t) \cdot (T_{EPFL,medium}-T_{EPFL,medium-out})~\forall t$                                  |
| Energy balance of heat pump                | $E(t) + Q_{evap,ref}(t) = Q_{cond,ref}(t) ~\forall t$                                                                              |
| First law efficiency of heat pump          | $E(t) = \dfrac{Q_{cond,ref}(t)}{COP}~\forall t$                                                                                |
| Heat supply to EPFL                        | $\dot{M}Cp_{EPFL}(t)\cdot (T_{EPFL,medium}-T_{EPFL,medium-out}) = \dfrac{Q_{heating}(t)}{t_{op}(t)} ~\forall t$            |
| Log mean temperature in condenser for COP  | $T_{LM,cond,ref}=\dfrac{T_{EPFL,medium}-T_{EPFL,medium-out}}{\ln{\left( \dfrac{T_{EPFL,medium}}{T_{EPFL,medium-out}}\right)}}$ |
| log mean temperature in evaporator for COP | $T_{LM,evap,ref}=\dfrac{T_{HP,high-in}-T_{HP,high-out}}{\ln{\left( \dfrac{T_{HP,high-in}}{T_{HP,high-out}}\right)}}$           |
| Definition of COP                          | $COP=\epsilon \dfrac{T_{LM,cond,ref}}{(T_{LM,cond,ref}-T_{LM,evap,ref})}$                                                              |
<!-- \begin{array}{l}


<!-- \begin{array}{l}

\small \min OPEX\\
\small s.t.\\
\small OPEX=\sum_{t} C_{el} \cdot E(t) \cdot t_{op}(t)\\
\small Q_{evap}(t) = \dot{M}_{CP,Lake}(t) \cdot (T_{HP,high-in}-T_{HP,high-out})~\forall t \text{ Heat transfer on lake side}\\
\small Q_{cond}(t) = \dot{M}_{CP,EPFL}(t) \cdot (T_{EPFL,medium}-T_{EPFL,medium-out})~\forall t \text{ Heat transfer on EPFL side}\\
\small E(t) + Q_{evap}(t) = Q_{cond}(t) ~\forall t \text{ Energy balance of heat pump}\\
\small E(t) = \dfrac{Q_{cond}(t)}{COP}~\forall t \text{ First law efficiency of heat pump}\\
\small \dot{M}_{CP,EPFL}(t)\cdot (T_{EPFL,medium}-T_{EPFL,medium-out}) = \dfrac{Q_{heating}(t)}{t_{op}(t)} ~\forall t \text{ Heat supply to EPFL}\\
\small T_{LM,cond}=\dfrac{T_{EPFL,medium}-T_{EPFL,medium-out}}{\ln{\left( \dfrac{T_{EPFL,medium}}{T_{EPFL,medium-out}}\right)}} \text{ Definition of log mean temperature in condenser for COP}\\
\small T_{LM,evap}=\dfrac{T_{HP,high-in}-T_{HP,high-out}}{\ln{\left( \dfrac{T_{HP,high-in}}{T_{HP,high-out}}\right)}} \text{ Definition of log mean temperature in evaporator for COP}\\
\small COP=\epsilon \dfrac{T_{LM,cond}}{(T_{LM,cond}-T_{LM,evap})} \text{ Definition of COP}\\
\end{array} -->


Where $\dot{M}Cp_{Lake}$ and $\dot{M}Cp_{EPFL}$ are the flow of the lake and the EPFL supply system respectively. Note that $E$ is the heat pump electricity in [kW], $Q_{cond,ref}$ and $Q_{evap,ref}$ are the heat power in [kW] flowing through the condenser and the evaporator respectively, $Q_{heating}(t)$ is the EPFL medium heat consumption. Data is clustered using the clusters produced before. $t_{op}$ is the operational time for each cluster. $T_{LM,cond,ref}$, $T_{LM,evap,ref}$ are the logarithmic mean temperatures at the condenser and the evaporator respectively. Finally, $\epsilon$ is the Carnot efficiency of the heat pump.


```{python, eval = T, echo = F, results='hide'}
#| label: ampl-ref

from amplpy import AMPL
import pandas as pd
import os
import pickle
import tabulate
from IPython.display import display, HTML
from codes_02_heat_recovery.helper import save_ampl_results, run_ampl


# Read data from CSV
data_file = "clusters_data.csv"
model_file = "NLP_ref.mod"
model_directory = "1.Reference_case"

run_ampl(data_file, model_directory, model_file)

ref_data = pd.read_pickle(r'.\codes_02_heat_recovery\results\NLP_ref.pkl')

html_table_ref_data = "<h5 style='text-align:center;'>Reference case optimization results</h2>\n\n"
html_table_ref_data += "<table border='1' style='border-collapse: collapse;'>\n"
html_table_ref_data += "<tr><th>Variable</th><th>Value</th></tr>\n"
html_table_ref_data += f"<tr><td>Objective</td><td>{round(ref_data['obj'],2)} CHF</td></tr>\n"
html_table_ref_data += "</table>"

HTML(html_table_ref_data)

print("The OPEX for reference case is:", round(ref_data['obj'],2), "CHF.\n")

```


Using AMPL, the problem is solved and the OPEX is 635641.3566 [CHF/y]

## Data Center heat recovery {#subsec:case-2}

```{r task-2-case-2, out.width='100%', fig.align='center', fig.cap='Case 2: Heat recovery from data center', echo=F, fig.show='hold'}
#| label: fig-task-2-case-2
knitr::include_graphics('Figures/task_2_case_2.png')
```

In this scenario, heat recovery is applied using the data center. The data center produces 574 [kW] of heat, and must be cooled. Fluid enters at fixed temperature $T_{ret}=290$ [K] and leaves at fixed temperature $T_{DC,in}=333$ [K]. A heat exchanger is installed at the outlet of the data center, to recover heat for EPFL buildings. To ensure complete cooling of the data center and preheat lake water for the heat pump, a Free cooling heat exchanger is also installed. The goal of this scenario is to determine the size of the heat exchanger $A_{HE,DC}$ $[m^2]$ in order to lower the TOTEX of the heat supply system. The optimization problem is as follows:

\begin{array}{l}
\min{CAPEX + OPEX} \\
\text{ s.t.}\\
\end{array}

| Constraint type                            | Equation                                                                                                                   |
|--------------------------------------------|----------------------------------------------------------------------------------------------------------------------------|
| COST CONSTRAINTS                 |                                        |
| OPEX calculation                           | $OPEX=\sum_{t} C_{el} \cdot E(t) \cdot t_{op}(t)$                                                                          |
| CAPEX calculation                           | $CAPEX=\dfrac{i(i+1)^n}{(i+1)^n-1}\cdot \dfrac{I_{New}}{I_{Ref}}\cdot a_{HE}\cdot A_{HE,DC}^{b_{HE}}\cdot F_{BM,HE}$                                                                          |
| MEETING HEATING DEMAND, ELECTRICAL CONSUMPTION                 |                                        |
| Heat transfer on lake side                 | $Q_{evap}(t) = \dot{M}(t)Cp_{water} \cdot (T_{HP,in}(t)-T_{HP,high-out})~\forall t$                                       |
| Heat transfer on EPFL side                 | $Q_{cond}(t) = \dot{M}Cp_{EPFL}(t) \cdot (T_{EPFL,medium}-T_{Radin}(t))~\forall t$                                  |
| Heat transfer at HEX, on DC side                | $Q_{rad}(t) = \dot{M}Cp_{DC}(t) \cdot (T_{DC,in}(t)-T_{DC,out})~\forall t$                                  |
| Heat transfer at HEX, on EPFL side                 | $Q_{rad}(t) = \dot{M}Cp_{EPFL}(t) \cdot (T_{Radin}(t)-T_{EPFL,medium-out})~\forall t$                                  |
| Energy balance of heat pump                | $E(t) + Q_{evap}(t) = Q_{cond}(t) ~\forall t$                                                                              |
| First law efficiency of heat pump          | $E(t) = \dfrac{Q_{cond}(t)}{COP(t)}~\forall t$                                                                                |
| Heat supply to EPFL                        | $Q_{cond}(t)+Q_{rad}(t)= \dfrac{Q_{heating}(t)}{t_{op}(t)} ~\forall t$            |
| Log mean temperature in condenser for COP  | $T_{LM,cond}(t)=\dfrac{T_{EPFL,medium}-T_{Radin}(t)}{\ln{\left( \dfrac{T_{EPFL,medium}}{T_{Radin}(t)}\right)}}~\forall t$ |
| log mean temperature in evaporator for COP | $T_{LM,evap}(t)=\dfrac{T_{HP,in}(t)-T_{HP,high-out}}{\ln{\left( \dfrac{T_{HP,in}(t)}{T_{HP,high-out}}\right)}}~\forall t$           |
| Definition of COP                          | $COP(t)=\epsilon \dfrac{T_{LM,cond}(t)}{T_{LM,cond}(t)-T_{LM,evap}(t)}~\forall t$                                                              |
| Free cooling from Data center side                          | $Q_{free}(t)=\dot{M}Cp_{DC}(t) \cdot (T_{DC,out}(t)-T_{Ret})~\forall t$                                                           |
| Free cooling from lake side                          | $Q_{free}(t) = \dot{M}(t)Cp_{water} \cdot (T_{HP,in}(t)-T_{HP,high-in})~\forall t$                                                              |
| Heat exchanger area                          | $A_{HEDC} \geqslant \dfrac{Q_{rad}(t)}{U_{DC}\cdot \Delta T_{LM,DC}(t)}~\forall t$                                                              |
| Log-mean temperature difference of heat exchanger                          | $\Delta T_{LM,DC}(t)=\dfrac{(T_{DC,in}-T_{Radin}(t))-(T_{DC,out}(t)-T_{EPFL,medium-out})}{\ln{\left( \dfrac{T_{DC,in}-T_{Radin}(t)}{T_{DC,out}(t)-T_{EPFL,medium-out}}\right)}}~\forall t$                                                              |


Where $Q_{free}(t)$ and $Q_{rad}(t)$ are the heat exchanges in the free cooling heat exchanger and the heat exchanger respectively. The lifetime considered is $n=20$ years and the interest is $i=5\%$.
Note that for this scenario, the Heat pump COP is not constant, since inlet and outlet temperatures of the condenser and evaporator are not constant. The problem becomes highly non-linear. It is possible to reduce the complexity by linearizing the log-mean temperatures for the Heat pump into mean temperatures:

| Constraint type                            | Equation                                                                                                                   |
|--------------------------------------------|----------------------------------------------------------------------------------------------------------------------------|
| Mean temperature in condenser for COP  | $T_{cond}(t)=\dfrac{T_{EPFL,medium}+T_{Radin}(t)}{2}~\forall t$ |
| Mean temperature in evaporator for COP | $T_{evap}(t)=\dfrac{T_{HP,in}(t)+T_{HP,high-out}}{2}~\forall t$           |
| Definition of COP                          | $COP(t)=\epsilon \dfrac{T_{cond}(t)}{T_{cond}(t)-T_{evap}(t)}~\forall t$                                                              |

Finally, to ensure that heat exchange does not invert, let's put additional constraints on the temperatures:

| Constraint type                            | Equation                                                                                                                   |
|--------------------------------------------|----------------------------------------------------------------------------------------------------------------------------|
| Temperatures in free cooling HEX  | $T_{HP,in}(t)\leqslant T_{DC,out}(t)~\forall t$ |
| HEX entrance | $T_{DC,out}(t) \geqslant T_{EPFL,medium-out}+\Delta T~\forall t$           |
| HEX outlet                         | $T_{DC,in} \geqslant T_{Radin}(t)~\forall t$  |

Where $\Delta T$ is the temperature difference between flows in the HEX. As the increase in this $\Delta T$ reduces the OPEX, but increases the CAPEX, and inversely, there exists an optimal $\Delta T$.

The resolution of this optimization problem returns:


```{python, eval = T, echo = F, results='hide'}
#| label: ampl-DC

from amplpy import AMPL
import pandas as pd
import os
import pickle
from codes_02_heat_recovery.helper import run_ampl

##Build model for DC model

# Read data from CSV
data_file   = "clusters_data.csv"
model_file = "NLP_DC.mod"
model_directory = "2.DC_recovery"

run_ampl(data_file, model_directory, model_file)

DC_data = pd.read_pickle(r'.\codes_02_heat_recovery\results\NLP_DC.pkl')

DC_TOTEX    = round(DC_data['obj'],2)
DC_OPEX     = round(DC_data['OPEX'].values[0][0],2)
DC_CAPEX    = round(DC_data['CAPEX'].values[0][0],2)
DC_AHEDC    = round(DC_data['AHEDC'].values[0][0],2)

html_table_dc_data = "<h5 style='text-align:center;'>DC optimization results</h2>\n\n"
html_table_dc_data += "<table border='1' style='border-collapse: collapse;'>\n"
html_table_dc_data += "<tr><th>Variable</th><th>Value</th></tr>\n"
html_table_dc_data += f"<tr><td>TOTEX</td><td>{DC_TOTEX} CHF</td></tr>\n"
html_table_dc_data += f"<tr><td>OPEX</td><td>{DC_OPEX} CHF</td></tr>\n"
html_table_dc_data += f"<tr><td>CAPEX</td><td>{DC_CAPEX} CHF</td></tr>\n"
html_table_dc_data += f"<tr><td>HEX Area</td><td>{DC_AHEDC} m<sup>2</sup></td></tr>\n"
#html_table_dc_data += f"<tr><td>&Delta;T</td><td>{round(DC_data['delta_T'],2)} K</td></tr>\n"
html_table_dc_data += "</table>"

HTML(html_table_dc_data)
print("The objective for DC case is:", round(DC_data['obj'],2), "CHF.\n")
print("The objective for DC case is:", round(DC_TOTEX,2), "CHF.\n")


```



$$
TOTEX=631756 \text{ [CHF/y], } A_{HE,DC}=188.07 \text{ [m$^2$] and } \Delta T=3.79 \text{ [K]}
$$

The cost reduction is really small: 3885 [CHF/y]. Therefore, this solution may not be the best one.



## Air ventilation heat recovery {#subsec:case-3}

```{r task-2-case-1, out.width='100%', fig.align='center', fig.cap='Case 3: Air ventilation heat recovery', echo=F, fig.show='hold'}
#| label: fig-task-2-case-3
knitr::include_graphics('Figures/task_2_case_3.png')
```

For this 2nd scenario, heat recovery (also named here as ventilation) is performed via air ventilation (HEX). This time the clustered weather data will be used (Temperature [°C] and Irradiation [$kW/m{^2}$]). 
Recall that 6 cluster points were defined for the weather data. In addition to this, in order to ensure the heating system is still working in extreme cases, a 7th cluster point is added. This cluster point is defined as the coldest day of the year with an irradiation of 0 [$kW/m{^2}$]. Data concerning the building $k_{th}$, $k_{sun}$, Floor Area, electricity demand and internal heat gains from people are added for each building of the heating system.

As mentioned the incoming air flow towards the EPFL ($T_{ext}$) can be preheated with the exiting flow from EPFL ($T_{int}=21°C$). Thus compared to reference case, $T_{ext,new}$ is hotter than $T_{ext,ref}$. 

Thanks to this air-ventilation preheating, the heat demand will reduce according to the following equation:

$$ Q(t)=A_{th}[U(T_{int}-T_{ext}(t))+m_{air}cp_{air}(T_{int}-T_{ext,new}(t))-k_{sun}Irr(t)-Q_{ppl}(t)]-Q_{el}(t) $$

Contrary to the two previous cases, the heat demand is now varying with time.

The optimization problem still search to minimize the TOTEX. The problem is as follows:

\begin{array}{l}
\min{CAPEX + OPEX} \\
\text{ s.t.}\\
\end{array}

| Constraint type                            | Equation                                                                                                                   |
|--------------------------------------------|----------------------------------------------------------------------------------------------------------------------------|
| COST CONSTRAINTS                 |                                        |
| OPEX calculation                           | $\text{OPEX}=\sum_{t} C_{el} \cdot E(t) \cdot t_{op}(t)$                                                                          |
| CAPEX calculation                           | $\text{CAPEX}=\dfrac{i(i+1)^n}{(i+1)^n-1}\cdot \dfrac{I_{New}}{I_{Ref}}\cdot a_{vent}\cdot A_{vent}^{b_{vent}}\cdot F_{BM,vent}$                                                                          |
| VENTILATION CONSTRAINTS                |                                        |
| Convection losses                 | $U(b) = k_{th} - m_{air}\cdot Cp_{air}~\forall \text{buildings}$                                       |
| Heat demand for all buildings                | $Q(t)= \sum_{n=b} A_{th}[U(T_{int}-T_{ext}(t))+m_{air}cp_{air}(T_{int}-T_{ext,new}(t))-k_{sun}Irr(t)-Q_{ppl}(t)]-Q_{el}(t) ~\forall t, \text{buildings}$                                  |
| Heat transfer at HEX, Cooling side                | $Q_{vent}(t) = \sum_{n=b}A_{HEX}(b)m_{air}Cp_{air} \cdot (T_{ext,new}(t)-T_{ext}(t))~\forall t$                                  |
| Heat transfer at HEX, on Hot side                 | $Q_{vent}(t) = \sum_{n=b}A_{HEX}(b)m_{air}Cp_{air} \cdot (T_{int}-T_{release}(t))~\forall t, \text{buildings}$                                  |                                            
| Log-mean temperature difference of heat exchanger                          | $\Delta T_{LM,vent}(t)=\dfrac{(T_{int}-T_{ext,new}(t))-(T_{release}(t)-T_{ext}(t))}{\ln{\left( \dfrac{T_{int}-T_{ext,new}(t)}{T_{release}(t)-T_{ext}(t)}\right)}}~\forall t$                                                              |
| Heat exchanger area                          | $A_{vent} \geqslant \dfrac{Q_{vent}(t)}{U_{vent}\cdot \Delta T_{LM,vent}(t)}~\forall t$                                                              |
| HEX Entrance (to avoid reversal of HEX)                          | $T_{release}(t) \geqslant T_{ext}(t)+\Delta T_{min}~\forall t$                                                              |
| HEX Entrance (to avoid reversal of HEX)                          | $T_{int}(t) \geqslant T_{ext,new}(t)+\Delta T_{min}~\forall t$                                                              |
| Temperature check at cold side                          | $T_{ext,new}(t) \geqslant T_{ext}(t)~\forall t$                                                              |

Where $\Delta T_{min}$ is the minimum temperature difference between hot and cold flows in the HEX. As the increase in $\Delta T$ reduces the OPEX, but increases the CAPEX (and vice-versa),$\Delta T_{min}$ is the optimal value to reach. Also in this scenario COP is constant. 

All constraint equations from reference case (MASS BALANCE and MEETING HEATING DEMAND, ELECTRICAL CONSUMPTION) are not repeated here but must also be considered as constraints.

The resolution of this optimization problem returns:

```{python, eval = T, echo = F, results = 'hide'}
#| label: ampl-vent

from IPython.display import display, HTML
##Build model for vent case

# Read data from CSV
data_file   = "clusters_data.csv"
data_path   = os.path.join(os.getcwd(),"codes_01_energy_demand", data_file)
data        = pd.read_csv(data_path)

model_file      = "NLP_vent.mod"
model_directory = "3.Ventilation"

run_ampl(data_file, model_directory, model_file, True)

vent_data = pd.read_pickle(r'.\codes_02_heat_recovery\results\NLP_vent.pkl')

print("The objective for vent case is:", round(vent_data['obj'],2), "CHF.\n")

vent_TOTEX    = round(vent_data['obj'],2)
vent_OPEX     = round(vent_data['OPEX'].values[0][0],2)
vent_CAPEX    = round(vent_data['CAPEX'].values[0][0],2)
vent_AHEDC    = round(vent_data['Area_Vent'].values[0][0],2)

html_table_vent_data = "<h5 style='text-align:center;'>Ventilation optimization results</h2>\n\n"
html_table_vent_data += "<table border='1' style='border-collapse: collapse;'>\n"
html_table_vent_data += "<tr><th>Variable</th><th>Value</th></tr>\n"
html_table_vent_data += f"<tr><td>TOTEX</td><td>{vent_TOTEX} CHF</td></tr>\n"
html_table_vent_data += f"<tr><td>OPEX</td><td>{vent_OPEX} CHF</td></tr>\n"
html_table_vent_data += f"<tr><td>CAPEX</td><td>{vent_CAPEX} CHF</td></tr>\n"
html_table_vent_data += f"<tr><td>A<sub>vent</sub></td><td>{vent_AHEDC } m<sup>2</sup></td></tr>\n"
html_table_vent_data += "</table>"

HTML(html_table_vent_data)


```



- $OPEX=680761$ [CHF/y]
- $CAPEX=15844.7$ [CHF/y]
- $TOTEX=696606$ [CHF/y]
- $A_{vent}=157.176$ [m$^2$]


## Air ventilation with Heat pump integration {#subsec:case-4}

```{r task-2-case-1, out.width='100%', fig.align='center', fig.cap='Case 4: Air ventilation with Heat pump integration', echo=F, fig.show='hold'}
#| label: fig-task-2-case-4
knitr::include_graphics('Figures/task_2_case_4.png')
```

In this final scenario, in addition to the Heat Recovery added in the previous scenario, a Heat Pump is installed to further increase the temperature entering the EPFL heating system. In that case the Heat Recovery is used to preheat the flow entering the newly installed HP, instead of direclty preheat the entering flow of the EPFL heating system. Data imported for this scenario are the same as the ones used in scenario 2. Also due to the new HP, new flows are present and must be considered: T_{ext,new}, T_{air,in} and T_{release,2}. T_{int} will again be fixed at 21°C. The optimization problem is as follows (altough VENTILATION constraints are similar to the previous scenario, they were re-written due to the change in the concerned heat flows they are applied to):

\begin{array}{l}
\min{CAPEX + OPEX} \\
\text{ s.t.}\\
\end{array}

| Constraint type                            | Equation                                                                                                                   |
|--------------------------------------------|----------------------------------------------------------------------------------------------------------------------------|
| COST CONSTRAINTS                 |                                        |
| OPEX calculation                           | $\text{OPEX} =\sum_{t} C_{el} \cdot (E_{vent}(t)+E_{HP}(t)) \cdot t_{op}(t)$                                                                          |
| Cost HP                           | $\text{Cost HP} \geqslant C_{ref,HP} \cdot E_{HP}^{\beta_{HP}}(t) \dfrac{I_{New}}{I_{Ref}} \cdot F_{BM,HP}$                                                                          |
| CAPEX calculation                           | $\text{CAPEX}=\dfrac{i(i+1)^n}{(i+1)^n-1}\cdot (\dfrac{I_{New}}{I_{Ref}}\cdot a_{vent}\cdot A_{vent}^{b_{vent}}\cdot F_{BM,vent}+ Cost HP)$                                                                          |
| VENTILATION CONSTRAINTS             |                                        |
| Convection losses                 | $U(b) = k_{th} - m_{air}\cdot Cp_{air}~\forall \text{buildings}$                                       |
| Heat demand for all buildings                | $Q(t)= \sum_{n=b} A_{th} \cdot [U \cdot (T_{int}-T_{ext}(t))+m_{air}cp_{air}(T_{int}-T_{air,in}(t))-k_{sun}Irr(t)-Q_{ppl}(t)]-Q_{el}(t) ~\forall t, \text{buildings}$                                  |
| Heat transfer at HEX, Cooling side                | $Q_{vent}(t) = \sum_{n=b}A_{HEX}(b)m_{air}Cp_{air} \cdot (T_{ext,new}(t)-T_{ext}(t))~\forall t$                                  |
| Heat transfer at HEX, on Hot side                 | $Q_{vent}(t) = \sum_{n=b}A_{HEX}(b)m_{air}Cp_{air} \cdot (T_{int}-T_{release}(t))~\forall t, \text{buildings}$                                  |                                            
| Log-mean temperature difference of heat exchanger                          | $\Delta T_{LM,vent}(t)=\dfrac{(T_{int}-T_{ext,new}(t))-(T_{release}(t)-T_{ext}(t))}{\ln{\left( \dfrac{T_{int}-T_{ext,new}(t)}{T_{release}(t)-T_{ext}(t)}\right)}}~\forall t$                                                              |
| Heat exchanger area                          | $A_{vent} \geqslant \dfrac{Q_{vent}(t)}{U_{vent}\cdot \Delta T_{LM,vent}(t)}~\forall t$                                                              |
| HEX Entrance (to avoid reversal of HEX)                          | $T_{release}(t) \geqslant T_{ext}(t)+\Delta T_{min}~\forall t$                                                              |
| HEX Entrance (to avoid reversal of HEX)                          | $T_{int}(t) \geqslant T_{ext,new}(t)+\Delta T_{min}~\forall t$                                                              |
| Temperature check at cold side of heat recovery                         | $T_{ext,new}(t) \geqslant T_{ext}(t)~\forall t$                                                              |
Where $\Delta T_{min}$ is the minimum temperature difference between hot and cold flows in the HEX. As the increase in $\Delta T$ reduces the OPEX, but increases the CAPEX (and vice-versa),$\Delta T_{min}$ is the optimal value to reach. Also in this scenario COP is constant. 

But the optimization problem is also following new constraints specific to the added Air-Air HP:

| Constraint type                            | Equation                                                                                                                   |
|--------------------------------------------|----------------------------------------------------------------------------------------------------------------------------|
| Temperature check at hot side HP evaporator                        | $T_{release}(t) \geqslant T_{release,2}(t)~\forall t$                                                              |
| Temperature check at cold side HP condenser                        | $T_{air,in}(t) \geqslant T_{ext,new}(t)~\forall t$                                                              |
| Heat transfer at HP, Condenser side                | $Q_{HP,evap}(t) = 0.8 \cdot \sum_{n=b}A_{th}(b)m_{air}Cp_{air} \cdot (T_{release}(t)-T_{release,2}(t))~\forall t$                                  |
| Heat transfer at HP, Evaporator side                | $Q_{HP,cond}(t) =  \cdot \sum_{n=b}A_{th}(b)m_{air}Cp_{air} \cdot (T_{air_in}(t)-T_{ext,new}(t))~\forall t$                                  |
| Electricity consummed by HP                | $E_{HP}(t) = Q_{HP,cond}(t) - Q_{HP,evap}(t) ~\forall t$                                  |
| Electricity consummed by HP                | $E_{HP}(t) = Q_{HP,cond}(t)/COP_{HP} ~\forall t$                                  |
| $COP_{HP}$                | $3 \le COP_{HP} \le 7$                                  |
| $COP_{HP}$                | $COP_{HP} = \epsilon \dfrac{T_{LM,HP,cond}(t)}{T_{LM,HP,cond}(t)-T_{LM,HP,evap}(t)}~\forall t$                                  |
| Mean temperature in HP condenser   | $T_{LM,HP,cond}(t)=\dfrac{T_{air,in}-T_{ext,new}(t)}{log(\dfrac{T_{air,in}}{T_{ext,new}})}~\forall t$ |
| Mean temperature in HP evaporator  | $T_{LM,HP,evap}(t)=\dfrac{T_{release}-T_{release,2}(t)}{log(\dfrac{T_{release}}{T_{release,2}})}~\forall t$           |



All constraint equations from reference case (Mass Balance and EPFL Heat/Elec Demand) are not repeated here but must also be considered as constraints.

The resolution of this optimization problem returns:
```{python, eval = T, echo = F, results='hide'}
#| label: ampl-vent-HP

# Read data from CSV
data_file       = "clusters_data.csv"
model_file      = "NLP_vent_HP.mod"
model_directory = "4.Ventilation_HP"

run_ampl(data_file, model_directory, model_file, True)

vent_HP_data = pd.read_pickle(r'.\codes_02_heat_recovery\results\NLP_vent_HP.pkl')

print("The objective for vent HP case is:", round(vent_HP_data['obj'],2), "CHF.\n")

vent_HP_TOTEX    = round(vent_HP_data['obj'],2)
vent_HP_OPEX     = round(vent_HP_data['OPEX'].values[0][0],2)
vent_HP_CAPEX    = round(vent_HP_data['CAPEX'].values[0][0],2)
vent_HP_AHEDC    = round(vent_HP_data['Area_Vent'].values[0][0],2)
vent_HP_HPcost   = round(vent_HP_data['Cost_HP'].values[0][0],2)

html_table_vent_HP_data = "<h5 style='text-align:center;'>Ventilation with HP optimization results</h2>\n\n"
html_table_vent_HP_data += "<table border='1' style='border-collapse: collapse;'>\n"
html_table_vent_HP_data += "<tr><th>Variable</th><th>Value</th></tr>\n"
html_table_vent_HP_data += f"<tr><td>TOTEX</td><td>{vent_HP_TOTEX} CHF</td></tr>\n"
html_table_vent_HP_data += f"<tr><td>OPEX</td><td>{vent_HP_OPEX } CHF</td></tr>\n"
html_table_vent_HP_data += f"<tr><td>CAPEX</td><td>{vent_HP_CAPEX} CHF</td></tr>\n"
html_table_vent_HP_data += f"<tr><td>CAPEX<sub>HP</sub></td><td>{vent_HP_HPcost} CHF</td></tr>\n"
html_table_vent_HP_data += f"<tr><td>A<sub>vent</sub></td><td>{vent_HP_AHEDC} m<sup>2</sup></td></tr>\n"
html_table_vent_HP_data += "</table>"

HTML(html_table_vent_HP_data)

```

- $OPEX=.........$ [CHF/y]
- $CAPEX=.........$ [CHF/y]
- $TOTEX=.........$ [CHF/y]
- $A_{vent}=.......$ [m$^2$]


## Conclusion: which scenario enables a higher cost savings?


TBCompleted when we have data from the last scenario but we have a tiny error in our code which prevents from having a relevant result. We are working on it.


| Case   | OPEX [CHF/year] | CAPEX [CHF/year] | TOTEX [CHF/year] |
|--------|-----------------|------------------|------------------|
| Case 1 |                 |0                 |                  |
| Case 2 |                 |                  |                  |
| Case 3 |                 |                  |                  |
| Case 4 |                 |                  |                  |


<!-- 
# AMPL programming guidelines
In part 2, you will be using AMPL to code and optimize your models. We prepared for you a virtual machine (VM ID: STI-FM-cours-2023) with all the tools needed (you need a lisence for ampl). Pay attention that all files you save locally on the VM will be deleted once you log out. Therefore, store your files on your personal disk.

VScode has an ampl extension for the layout of your ampl code (with nice colors). It is as well necessary to run your models. So when you open your ampl models, make sure you see the ampl layout. If not, you can install the ampl extension.

```{r ampl extension, out.width='30%', fig.align='center', echo=F}
knitr::include_graphics('Figures/ampl_extension.png')
```

When you want to run the optimization of your models, you have to open an AMPL terminal window. Simply right click on the window of one ampl model and include it.

```{r ampl open terminal, out.width='50%', fig.align='center', echo=F}
knitr::include_graphics('Figures/ampl_include_file.png')
```

Then enter `ampl`. It will allow you to write in ampl language in the terminal.

```{r ampl terminal, out.width='100%', fig.align='center', echo=F}
knitr::include_graphics('Figures/ampl_terminal.png')
```

Finally, include your .run file to launch the optimization.


```{r ampl include run, out.width='50%', fig.align='center', echo=F}
knitr::include_graphics('Figures/ampl_include_file.png')
```

In a first step, make sure your models are running by working only in the ampl file (.mod, .run, .dat). 

Then in a second step, you will substitute the default parameters with your own data calculated in the first part of the project. It only concerns the options 3.Ventilation and 4.Ventilation_HP where you have to give the values of specElec, FloorArea, k_th, k_sun and specQ_people for each building of EPFL. 


# Reporting
You will report in this file what you have done for part 2. Compare options and evaluate which one is the most relevant for your case study. Pay attention to characterize each stream of the 4 flowsheets (we wish at least the mass flows, temperatures and heat loads).
-->
