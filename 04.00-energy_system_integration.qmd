```{css, echo=F}
p {
  text-align: justify
}
```

```{python, echo=F, results='hide', label='load data'}
import matplotlib
matplotlib.use('Agg')
#import codes_01_energy_demand.NR_functions as fct1
#import codes_03_HP_modeling.Regression_Mirco.carnot_regression as fct2
#from codes_01_energy_demand.NR_functions import WeatherClustering

import codes_04_energy_system_integration.functions as fct3
import numpy as np; from numpy import matlib
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats
from sklearn.cluster import KMeans, SpectralClustering, AgglomerativeClustering
import os
import plotly.express as px
import plotly.graph_objects as go
from IPython.display import display, HTML
import amplpy
from amplpy import AMPL, DataFrame
import sys
import re
import glob
from enum import Enum
```
```{python, echo=F, eval=T, label=import_classes}
class criteria(Enum):
    OPEX = 'OPEX'
    CAPEX = 'CAPEX'
    Emissions = 'Emissions'
    TOTEX = 'TOTEX'
    parametric = 'parametric'

class criteria1(Enum):
    OPEX = 'OPEX'
    CAPEX = 'CAPEX'
    Emissions = 'Emissions'
    TOTEX = 'TOTEX'
    parametric = 'parametric'

class criteria2(Enum):
    OPEX = 'OPEX'
    CAPEX = 'CAPEX'
    Emissions = 'Emissions'
    TOTEX = 'TOTEX'
    parametric = 'parametric'
```

# Energy system optimization

## Introduction

In this section, the whole EPFL campus is going to be modelled. Different technologies, such as PV panels, boilers, heat pumps with different fluids and a double stage heat pump, solide oxyde fuel cells, and solar thermal collectors, are investigated to satisfy EPFL's needs in electricty and heat. The different technologies are integrated into the model, considering their performance, size and cost, enabling thereby to make projections on Capex, Opex and Envex. The goal of the section is to conclude the analysis, by giving a final scenario which can be optimized according to the given need. More precisely, a scenario investigating the lowest operating cost, one the lowest capital expenditure and one for the lowest environmental emissions. Finally, a sensitivity analysis on the ressource prices and environmental impacts is conducted to examine the influence of the different parameters on the solution. 
The system on which the study is conducted, is the on with the heat pump heat recovery system on the ventilation side.

## Technologies 

Here are the different technologies which can be selected during the model:

<style type="text/css">
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
  overflow:hidden;padding:10px 5px;word-break:normal;}
.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}
.tg .tg-baqh{text-align:center;vertical-align:top}
.tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top}
</style>
<table class="tg">
<thead>
  <tr>
    <th class="tg-c3ow">Technology</th>
    <th class="tg-c3ow">cinv1 [CHF/yr]</th>
    <th class="tg-c3ow">cinv2 [CHF/yr]</th>
    <th class="tg-baqh">Efficiency [-]</th>
    <th class="tg-c3ow">Sources</th>
  </tr>
</thead>
<tbody>
  <tr>
    <td class="tg-c3ow">Boiler</td>
    <td class="tg-c3ow">330.6</td>
    <td class="tg-c3ow">9.1</td>
    <td class="tg-baqh">0.9</td>
    <td class="tg-c3ow">@Technologies, @SwissEnergyscope</td>
  </tr>
  <tr>
    <td class="tg-baqh">STC</td>
    <td class="tg-baqh">30.2</td>
    <td class="tg-baqh">39.6</td>
    <td class="tg-baqh">0.75</td>
    <td class="tg-baqh"><span style="font-weight:400;font-style:normal;text-decoration:none">@Technologies, @</span>SwissEnergyscope</td>
  </tr>
  <tr>
    <td class="tg-baqh">PV</td>
    <td class="tg-baqh">143.3</td>
    <td class="tg-baqh">457.6</td>
    <td class="tg-baqh">0.15</td>
    <td class="tg-baqh"><span style="font-weight:400;font-style:normal;text-decoration:none">@Technologies, @</span>SwissEnergyscope</td>
  </tr>
  <tr>
    <td class="tg-baqh">HP with propane (LT)</td>
    <td class="tg-baqh">494.2</td>
    <td class="tg-baqh">91110</td>
    <td class="tg-baqh">a = 0; b=0.00098; c=0.3075</td>
    <td class="tg-baqh"><span style="font-weight:400;font-style:normal;text-decoration:none">@Technologies, @</span>SwissEnergyscope</td>
  </tr>
  <tr>
    <td class="tg-c3ow">HP with propane (MT)</td>
    <td class="tg-c3ow">494.2</td>
    <td class="tg-c3ow">99590</td>
    <td class="tg-baqh">a=0; b=0; c=0.34269</td>
    <td class="tg-c3ow"><span style="font-weight:400;font-style:normal;text-decoration:none">@Technologies, @</span>SwissEnergyscope</td>
  </tr>
  <tr>
    <td class="tg-c3ow">HP with propylene (LT)</td>
    <td class="tg-c3ow">494.2</td>
    <td class="tg-c3ow">91170</td>
    <td class="tg-baqh">a=0.00064; b=0; c=0.405</td>
    <td class="tg-c3ow"><span style="font-weight:400;font-style:normal;text-decoration:none">@Technologies, @</span>SwissEnergyscope</td>
  </tr>
  <tr>
    <td class="tg-baqh">HP with propylene (MT)</td>
    <td class="tg-baqh">494.2</td>
    <td class="tg-baqh">116560</td>
    <td class="tg-baqh">a=1.6e-5; b=0; c=0.5</td>
    <td class="tg-baqh"><span style="font-weight:400;font-style:normal;text-decoration:none">@Technologies, </span>@SwissEnergyscope</td>
  </tr>
  <tr>
    <td class="tg-baqh">SOFC</td>
    <td class="tg-baqh">4224</td>
    <td class="tg-baqh">28540</td>
    <td class="tg-baqh">0.5 (elec); 0.4(heat)</td>
    <td class="tg-baqh"><span style="font-weight:400;font-style:normal;text-decoration:none">@Technologies, @</span>SwissEnergyscope</td>
  </tr>
</tbody>
</table>

## Scenario analysis

<!-- ### Scenario 1: CAPEX optimization

The optimization of Capex lead the following result:
TEchnologies used:

### Scenario 2: OPEX optimization

### Scenario 3: Emission optimization

### Scenario 4: TOTEX optimization (without ENVEX)

### Scenario 5: TOTEX optimization (with ENVEX) -->

### Scenario 1 CAPEX
For the first scenario, the capital expenditure is minimized. The table below summarizes the different technologies which can be chosen by the model and their operating and investment cost:




```{python, echo=F, eval=F,label= optimize_CAPEX, results='hide'}

data=fct3.optimize(criteria=criteria.CAPEX)
```

```{python, echo=F, eval=F,label= diplay_optimize_CAPEX}
print("The technologies used are:")
print(data['use'][data['use']!=0].dropna().index.values)
print(data['mult_t'].loc["Boiler"]*10000)
print(data['mult_t'].loc["ElecGridBuy"]*1000)
print(data['mult_t'].loc["ElecGridSell"]*1000)
print(data['mult_t'].loc["NatGasGrid"]*1000)
print("The investment cost is %.3e [CHF/yr]" %(data['InvCost'].values[0][0]))
print("The operating cost is %.3e [CHF/yr]" %(data['OpCost'].values[0][0]))
print("The CO2 emissions are %.3e [g/yr]" %(data['Emissions'].values[0][0]))
print("The total cost is %.3e [CHF/yr]" %(data['Totalcost'].values[0][0]))
print(data['TotEnvCost'])
```

|           | Boiler (kW) | NatGasbuy (kW) | Elecbuy (kW) |
|-----------|-------------|----------------|--------------|
| Cluster 0 | 11073.6     | 12304          | 12258.2      |
| Cluster 1 | 0           | 0              | 12258.2      |
| Cluster 2 | 7317.4      | 8130.5         | 12258.2      |
| Cluster 3 | 19457.6     | 21619.6        | 12258.2      |
| Cluster 4 | 0           | 0              | 12258.2      |
| Cluster 5 | 3198.6      | 3554           | 12258.2      |  
| Cluster 6 | 31713.6     | 35237.3        | 12258.2      |

As one can see, the whole electricity need is covered by buying the necessary, which is logical since buying the electrcity will lead to lower investment. To heat, the only technology is the boiler, which uses natural gas as fuel to provide heat. The necessary amount of bought gas is given in the second column. The Cost is given at the end in comparison with the other scenarios

### Scenario 2 OPEX
```{python, echo=F, eval=F,label= optimize_OPEX, results='hide'}

data=fct3.optimize(criteria=criteria.OPEX)
```

```{python, echo=F, eval=F,label= diplay_optimize_OPEX}
print("The technologies used are:")
print(data['use'][data['use']!=0].dropna().index.values)
print(data['mult_t'].loc["Boiler"]*10000)
print(data['mult_t'].loc["R1270_LT"]*1000)
print(data['mult_t'].loc["PV"]*3)
print(data['mult_t'].loc["ElecGridBuy"]*1000)
print(data['mult_t'].loc["NatGasGrid"]*1000)
print("The investment cost is %.3e [CHF/yr]" %(data['InvCost'].values[0][0]))
print("The operating cost is %.3e [CHF/yr]" %(data['OpCost'].values[0][0]))
print("The CO2 emissions are %.3e [g/yr]" %(data['Emissions'].values[0][0]))
print("The total cost is %.3e [CHF/yr]" %(data['Totalcost'].values[0][0]))
print(data['TotEnvCost'])
```

As for the Opex optimization, the model will choose the lowest operational cost per year, leading to the following result:


|           | Boiler (kW) | NatGasbuy (kW) | R1270_LT (kW)| PV (kW)       | Elecbuy (kW) |
|-----------|-------------|----------------|--------------|---------------|--------------|
| Cluster 0 | 5594.6      | 6216.2         | 5479         |87.8           |13587.5       |
| Cluster 1 | 0           | 0              | 0            |1208.6         |11049.6       |
| Cluster 2 | 1838.4      | 2042.7         | 5479         |627.8          |13073.2       |
| Cluster 3 | 13978.6     | 15531.8        | 5479         |70.5           |13696.5       |
| Cluster 4 | 0           | 0              | 0            |627.4          |11630.8       |
| Cluster 5 | 0           | 0              | 3198.6       |96.7           |12863.5       |  
| Cluster 6 | 26234.6     | 29149.5        | 12258.2      |0              |13588.2       |
Again, a major part of electricity is provided by buying it and the rest by PV cells. More precisely, for clusters 1 & 4, which represent the clusters witnessing the highest amount of solar radiation, the system will choose more PV cells, thus lowering the electricity purchase. For the heating, the boiler is the used the most for cluster 6, which is for the extreme cases where most heat must be supplied. The rest of the heating load is covered by the heat pump using fluid R1270. One notices that for cluster 5, the heat pump provides all the necessary heating load, and the boiler is not used.

### Scenario 3 Emissions
```{python, echo=F, eval=F,label= optimize_Emissions, results='hide'}

data=fct3.optimize(criteria=criteria.Emissions)
```

```{python, echo=F, eval=F,label= diplay_optimize_Emissions}
print("The technologies used are:")
print(data['use'][data['use']!=0].dropna().index.values)
print(data['mult_t'].loc["STC"]*3)
print(data['mult_t'].loc["R290_MT"]*1000)
print(data['mult_t'].loc["SOFC"]*100)
print(data['mult_t'].loc["HydrogenGrid"]*1000)
print(data['mult_t'].loc["ElecGridBuy"]*1000)
print(data['mult_t'].loc["ElecGridSell"]*1000)
print(data['mult_t'].loc["PV"]*3)
print("The investment cost is %.3e [CHF/yr]" %(data['InvCost'].values[0][0]))
print("The operating cost is %.3e [CHF/yr]" %(data['OpCost'].values[0][0]))
print("The CO2 emissions are %.3e [g/yr]" %(data['Emissions'].values[0][0]))
print("The total cost is %.3e [CHF/yr]" %(data['Totalcost'].values[0][0]))
print(data['TotEnvCost'])
```

The following scenario aims to reduce the total emissions:

|           | SOFC (kW)   | Hydrogenbuy (kW) | R290_MT (kW) | PV (kW)       | Elecbuy (kW) |
|-----------|-------------|------------------|--------------|---------------|--------------|
| Cluster 0 | 10050.9     | 25217.2          | 1022.7       |87.8           |0             |
| Cluster 1 | 0           | 0                | 0            |1208.6         |11049.6       |
| Cluster 2 | 7317.4      | 18293.5          | 0            |627.8          |2483.6        |
| Cluster 3 | 12033.6     | 30084.0          | 7424         |70.5           |0             |
| Cluster 4 | 0           | 0                | 0            |627.4          |11630.7       |
| Cluster 5 | 3198.6      | 7996.5           | 0            |96.7           |8163.2        | 
| Cluster 6 | 19713.6     | 49283.9          | 12000        |0              |0             |

One notices that again electricity is bought, but only for 4 of the clusters. In fact, in the cases where no electricity is bought, it is provided by the SOFC. The SOFC delivering both heat and electricity, it is especially efficient for the clusters where the heating demand is large. To fuel the SOFC, hydrogen needs to be bought. The rest of the electricity demand is covered by PV pannels, except for the extreme cluster, and the rest of the heating load by the heat pump for the cases where the heating demand is highest.

### Scenario 4 TOTEX
```{python, echo=F, eval=F,label= optimize_TOTEX, results='hide'}

data=fct3.optimize(criteria=criteria.TOTEX)
```

```{python, echo=F, eval=F,label= diplay_optimize_TOTEX}
print("The technologies used are:")
print(data['use'][data['use']!=0].dropna().index.values)
print(data['mult_t'].loc["STC"]*3)
print(data['mult_t'].loc["Boiler"]*10000)
print(data['mult_t'].loc["NatGasGrid"]*1000)
print(data['mult_t'].loc["ElecGridBuy"]*1000)
print("The investment cost is %.3e [CHF/yr]" %(data['InvCost'].values[0][0]))
print("The operating cost is %.3e [CHF/yr]" %(data['OpCost'].values[0][0]))
print("The CO2 emissions are %.3e [g/yr]" %(data['Emissions'].values[0][0]))
print("The total cost is %.3e [CHF/yr]" %(data['Totalcost'].values[0][0]))
print(data['TotEnvCost'])
```

Then, an optimization was performed using the total cost without the CO2 tax as the objective function: 

|           | Boiler (kW) | NatGasbuy (kW) | Elecbuy (kW) | STC (kW)      |
|-----------|-------------|----------------|--------------|---------------|
| Cluster 0 | 10634.7     | 11816.3        | 12258.2      |438.9          |
| Cluster 1 | 0           | 0              | 12258.2      |0              |
| Cluster 2 | 6834.0      | 7593.3         | 12258.2      |483.4          |
| Cluster 3 | 19105.0     | 21227.8        | 12258.2      |352.6          |
| Cluster 4 | 0           | 0              | 12258.2      |0              |
| Cluster 5 | 2715.2      | 3016.9         | 12258.2      |483.4          |  
| Cluster 6 | 31713.6     | 35237.3        | 12258.2      |0              |

It is similar to the case of the CAPEX but STC are added to reduce the heat supply by the boiler. However, for the extreme cluster which is the last one, there is no irradiation thus the STC cannot be used. Again, all the electricity needed is bought.

### Scenario 5 TOTEX + CO2 tax : 120e-6 CHF/gCO2

```{python, echo=F, eval=F,label= optimize_parametric, results='hide'}

data=fct3.optimize(criteria=criteria.parametric)
```


```{python, echo=F, eval=F,label= diplay_optimize_paramteric}
print("The technologies used are:")
print(data['use'][data['use']!=0].dropna().index.values)
print(data['mult_t'].loc["STC"]*3)
print(data['mult_t'].loc["Boiler"]*10000)
print(data['mult_t'].loc["NatGasGrid"]*1000)
print(data['mult_t'].loc["ElecGridBuy"]*1000)
print("The investment cost is %.3e [CHF/yr]" %(data['InvCost'].values[0][0]))
print("The operating cost is %.3e [CHF/yr]" %(data['OpCost'].values[0][0]))
print("The CO2 emissions are %.3e [g/yr]" %(data['Emissions'].values[0][0]))
print("The total cost is %.3e [CHF/yr]" %(data['Totalcost'].values[0][0]))
print(data['TotEnvCost'])
```

Finally, the CO2 tax is added to the total cost:

|           | Boiler (kW) | NatGasbuy (kW) | Elecbuy (kW) | STC (kW)      |
|-----------|-------------|----------------|--------------|---------------|
| Cluster 0 | 10634.7     | 11816.3        | 12258.2      | 438.9         |
| Cluster 1 | 0           | 0              | 12258.2      |0              |
| Cluster 2 | 4178.6      | 4642.9         | 12258.2      |3138.8         |
| Cluster 3 | 19105.0     | 21227.8        | 12258.2      |352.6          |
| Cluster 4 | 0           | 0              | 12258.2      |0              |
| Cluster 5 | 2715.2      | 3016.9         | 12258.2      |483.4          |  
| Cluster 6 | 31713.6     | 35237.3        | 12258.2      |0              |

The technologies used are the same as the previous scenario but considering the CO2 tax leads to lower boiler and higher STC use. However, the CO2 tax is not high enough to influence the choice of technologies or to have a significant impact on the used share.


### Recapitulative table:

After investigating the technologies used for different scenarios, one can study their cost:

| Scenario                         | CAPEX (CHF/year) | OPEX (CHF/year) | Emissions (tCO2/year) | TOTEX (no Envex) (CHF/year)| TOTEX (with ENVEX) (CHF/year)|
|----------------------------------|------------------|-----------------|-----------------------|----------------------------|------------------------------|
| Scenario 1 | 2.900e+05 | 3.046e+06 | 6.415e+03|3.336e+06 |4.106e+06|
| Scenario 2 |  3.702e+06 | 2.895e+06| 4.595e+03|6.597e+06 |7.148e+06|
| Scenario 3 | 2.891e+08 | 1.395e+07| 8.479e+02|3.030e+08 |3.031e+08|   
| Scenario 4 | 2.964e+05 | 3.022e+06| 6.231e+03|3.318e+06 |4.066e+06|  
| Scenario 5 | 3.315e+05 | 2.995e+06| 6.027e+03|3.326e+06 |4.050e+06|                   

Note that, the results are consistent since the cost minima are well associated with the functions to be minimized. Then, one can see that between the OPEX and the CAPEX cases, the CAPEX scenario is the best one in terms of total price. Finally, comparing scenario 3 and scenario 5, it should be noted that CO2 emissions are divided by 10, but the total cost is multiplied by 100, demonstrating the difficulty of reducing CO2 emissions while paying attention to the final cost of the system. 

```{r, echo=F, results='hide',label='activate venv'}
#path <- file.path('./venv/bin/python')
library(reticulate)
#use_python(path)
use_virtualenv('./venv', required=FALSE)
```


<!-- ## Example 1 
I want to optimize the operational cost, and I know that NatGas will cost 0.32. What will be the Investment costs? and what technology will be used? -->

```{python, echo=F, eval=F,label= optimize_OPEX_exple, results='hide'}

data=fct3.optimize(criteria=criteria.OPEX,NatGasGrid=0.32)
```

```{python, echo=F, eval=F,label= diplay_optimize_OPEX_exple}
print("The technologies used are:")
print(data['use'][data['use']!=0].dropna().index.values)

print("The investment cost is %.3e [CHF/yr]" %(data['InvCost'].values[0][0]))
```

## Pareto Analysis

### Pareto TOTEX-Emissions
First, let's draw the Pareto curve between TOTEX and Emissions with the default values of all parameters.

```{python, echo=F, eval=T,label= get_pareto1, results='hide'}
TOTEX,EMISSIONS=fct3.get_pareto(criteria1.TOTEX,criteria2.Emissions,n=30)
```

```{python, echo=F, eval=T,label= draw_pareto1}
fct3.draw_pareto(TOTEX,EMISSIONS,"TOTEX [CHF/yr]", "Emissions [gCO2/yr]")
```

|                        | **Optimal TOTEX** | **Optimal TOTEX & GWP** | **Optimal GWP** |
|:----------------------:|:-----------------:|:-----------------------:|:---------------:|
|   **TOTEX [MCHF/y]**   |         3.3         |            11.5            |        21       |
| **Emissions [tCO2/y]** |        6300       |           2000           |       830       |

The most optimized point is the one at (2000tCO2/yr;11.5MCH/yr). Indeed, it gives the lowest TOTEX for a reasonable low emissions. Emissions could be reduced by almost 2.5 but then TOTEX would be multiplied by close to 2 and reached 21MCHF/yr. If it is assumed TOTEX can’t be too high, then 2000tCO2/yr is deemed acceptable. On contrary, if EPFL was not willing to invest on emission reduction it could select the solution on the far right where TOTEX is reduced by close to 4 to reach 3MCHF/yr but emissions would then be at 6300tCO2/yr (3 times more).

```{r CO2_EPFL_real_data, out.width='100%', fig.align='center', fig.cap='Carbon footprint of EPFL', echo=F}
#| label: fig-git-login
knitr::include_graphics('Figures/BILANCO2EPFLFR-1.png')
```

By comparing with values directly measured by EPFL @EPFL_emissions, the optimization done gives results in the same order of magnitude. If it is indeed assumed that Electricity emission on campus are not for heating then only 4ktCO2/yr are emitted for heating, which is really close to the 2ktCO2/yr found after the optimization.

## Sensitivity Analysis

The above Pareto curves were obtained with default values for all parameters. However it is important to be able to predict how the system would evolve in some specific situations. For example, if the price of electricity increases, what would be the optimal solution? Below are thus presented 4 sensitivity analysis. The first two are about the variation of the price of natural gas and electricity. The third one is about the variation of the carbon footprint of electricity. Finally, the last one is performed without use of boiler (as in case of fossil fuel equipment ban).

### Variation in the Natural Gas cost

With the current geopolitical tension between western countries and Russia, the natural gas price is very sensitive.

```{python, echo=F, eval=T,label= sensitivity_gas, results='hide'}
import plotly.graph_objects as go
import pandas as pd
import numpy as np

price = []
x = np.arange(0.001, 0.3, 0.01)
for gas_price in x:
    data = fct3.optimize(criteria=criteria.TOTEX,NatGasGrid=gas_price)
    #df = pd.read_pickle('./optimize_dump.pkl')
    #df.head()
    price.append(data['Totalcost'].values[0][0])

x_def = 0.0303
y_def_data = fct3.optimize(criteria=criteria.TOTEX,NatGasGrid=x_def)
y_def = y_def_data['Totalcost'].values[0][0]

fig = go.Figure(data=go.Scatter(x=x, y=price, mode='markers'))
fig = fig.add_trace(go.Scatter(x=[x_def], y=[y_def], mode='markers', marker=dict(color='red')))
fig = fig.update_layout(title='Natural Gas Price Plot with TOTEX objective', xaxis_title='Gas price (CHF/kWh)', yaxis_title='TOTEX (CHF/y)', showlegend = False)
fig.show()
```

In this plot it is possible to observe how TOTEX increases with an increase of the gas price. The red dot corresponds to the price of gas used to performed the first Pareto curves presented above. We can observe that it well correspond to the optimal TOTEX point of the Pareto which was at 3.3MCHF/yr with 6300tCO2/yr emissions. 
The goal of this first sensitity analysis is thus to replot another Pareto curve TOTEX-Emissions but this time with a higher gas price. 
Let's choose a price of 0.29CHF/kWh (highest point on the graph)

```{python, echo=F, eval=T,label= get_pareto_ng, results='hide'}
TOTEX,EMISSIONS=fct3.get_pareto(criteria1.TOTEX,criteria2.Emissions,n=30, NatGasGrid_pareto=0.291)
```

```{python, echo=F, eval=T,label= draw_pareto_ng}
fct3.draw_pareto(TOTEX,EMISSIONS,"TOTEX [CHF/yr]", "Emissions [gCO2/yr]")
```

Now the Pareto is different from the original case. Because gas price has been increased, it is not anymore optimal to choose utilities which require use of gas. 
That's why if we retake our first optimal point at 2000tCO2/yr, this time it is not anymore in the most optimal part of the graph. More precisely, the optimal point is now to lower emissions values with for instance a relevant optimal point at 1500tCO2/yr for a TOTEX of 14MCHF/yr. 
Thus increasing the gas price by almost 10, only increases the optimal TOTEX by 22% but enables to reduce emissions by 25%.
Let's note that only optimal values found on the Pareto are compared. The TOTEX vs gas price curve was only used to select a relevant gas price to perform the Multi-objective optimisation and the plot the Pareto curve.


### Variation in the Electricity cost

This time let's see what happen when the price of bought electricity changes.

```{python, echo=F, eval=T,label= sensitivity_elec, results='hide'}
import plotly.graph_objects as go
import pandas as pd
import numpy as np

price = []
x = np.arange(0.06, 0.5, 0.01)
for gas_price in x:
    data = fct3.optimize(criteria=criteria.TOTEX,ElecGridBuy=gas_price)
    #df = pd.read_pickle('./optimize_dump.pkl')
    #df.head()
    price.append(data['Totalcost'].values[0][0])

x_def = 0.0916
y_def_data = fct3.optimize(criteria=criteria.TOTEX,ElecGridBuy=x_def)
y_def = y_def_data['Totalcost'].values[0][0]

fig = go.Figure(data=go.Scatter(x=x, y=price, mode='markers'))
fig = fig.add_trace(go.Scatter(x=[x_def], y=[y_def], mode='markers', marker=dict(color='red')))
fig = fig.update_layout(title='Electricity Price Plot with TOTEX objective', xaxis_title='Electricity Price (CHF/kWh)', yaxis_title='TOTEX (CHF/y)', showlegend = False)
fig.show()
```

It appears TOTEX increases lineraly with electricity prices. The red dot is again corresponding to the price of electricity used in the orignal TOTEX-Emissions Pareto.
It can be noticed the plot starts at 0.06CHF/kWh. Indeed at lower buying prices, it would be more interesting to sell electricity since $BuyPrice < SellPrice$.
Let's see how the optimal point from Multi-objective optimisation changes when electricity is now bought at 0.49CHF/kWh.

```{python, echo=F, eval=T,label= get_pareto_elec, results='hide'}
TOTEX,EMISSIONS=fct3.get_pareto(criteria1.TOTEX,criteria2.Emissions,n=30, ElecGridBuy_pareto=0.49)
```

```{python, echo=F, eval=T,label= draw_pareto_elec}
fct3.draw_pareto(TOTEX,EMISSIONS,"TOTEX [CHF/yr]", "Emissions [gCO2/yr]")
```

This time the original optimal point of 2000tCO2/yr (for a 11.5MCHF/yr TOTEX) is lying below the optimal region of the obtained Pareto. This means that for the same emissions, the TOTEX is now increased. 
By selecting on the obtained Pareto the optimal point located at 2600tCO2/yr, the TOTEX is now 18.1MCHF/yr. This is a price increase of 57% compared to the original optimal point (with an emission increase of 30%). Thus if electricity prices increase, the optimal solution would be far more expensive as well as more polluting than if gas prices are increased. This comes from the fact that increase in electricity price leads to use of more gas to produce heat. In addition less elecitrity is bought thus alternative solutions like PV are needed to produce electricity, which is more expensive than buying it.
One could note that usually electricity prices increase when gas prices increase. Thus a better approach would be to increase both parameters at the same time.

### Variation in the Electricity carbon footprint

```{python, echo=F, eval=T,label= sensitivity_elec_carb, results='hide'}
import plotly.graph_objects as go
import pandas as pd
import numpy as np

price = []
x = np.arange(30, 100, 1)
for gas_price in x:
    data = fct3.optimize(criteria=criteria.parametric,c_elec=gas_price)
    #df = pd.read_pickle('./optimize_dump.pkl')
    #df.head()
    price.append(data['TotEnvCost'].values[0][0])

#oui
x_def = 75.3
y_def_data = fct3.optimize(criteria=criteria.parametric,c_elec=x_def)
y_def = y_def_data['TotEnvCost'].values[0][0]

fig = go.Figure(data=go.Scatter(x=x, y=price, mode='markers'))
fig = fig.add_trace(go.Scatter(x=[x_def], y=[y_def], mode='markers', marker=dict(color='red')))
fig = fig.update_layout(title='Electricity Carbon Footprint Plot with TOTEX objective', xaxis_title='Electricity carbon footprint (gCO2/kWh)', yaxis_title='TOTEX (CHF/y)', showlegend = False)
fig.show()
```

As for an electricity price increase, the TOTEX increases linearly with the electricity carbon footprint. 
Let's analysis how the optimal point on the Pareto curve changes when electricity emission factor is decreased to 30gCO2/kWh (compared to 75.3g/kWh in the original Pareto).

```{python, echo=F, eval=T,label= get_pareto_elec_carb, results='hide'}
TOTEX,EMISSIONS=fct3.get_pareto(criteria1.TOTEX,criteria2.Emissions,n=30, c_elec_pareto=30)
```

```{python, echo=F, eval=T,label= draw_pareto_elec_carb}
fct3.draw_pareto(TOTEX,EMISSIONS,"TOTEX [CHF/yr]", "Emissions [gCO2/yr]")
```

Now the optimal point lies around 1000tCO2/yr for a TOTEX of 8.5MCHF/yr. This is a 26% decrease in TOTEX compared to the original optimal point and a 50% decrease in emissions. Electricity buying being less expensive than installing lots of new equipment to produce its own electricity, it makes sense that with a reduction of electricity emissions factor, there is even more incentive to buy electricity. Thus overal cost is reduced at the same time as emissions. 


### Optimization without considering Boiler

Finally, let's see how preventing the optimizer to select a certain technology will impact the optimal TOTEX-Emissions point. 

```{python, echo=F, eval=T,label= get_pareto_woboiler, results='hide'}
TOTEX,EMISSIONS=fct3.get_pareto(criteria1.TOTEX,criteria2.Emissions,n=30, remove_tech_pareto=["Boiler"])
```

```{python, echo=F, eval=T,label= draw_pareto_woboiler}
fct3.draw_pareto(TOTEX,EMISSIONS,"TOTEX [CHF/yr]", "Emissions [gCO2/yr]")
```

Here Boiler has been removed. It means EPFL would not be allowed to use a boiler to answer the heating demand of the campus.
Emissions are reduced but not as much as the case where emissions factor was reduced. Indeed, the optimal point is now around to 1250tCO2/yr (compared to 1000t/yr when emission factor is decreased). Still compared to the original case, it is a 38% reduction in emissions but an increase of 62% of TOTEX which is now around 18.6MCHF/yr.
It makes sense since Boiler was the main user of NatGas so by removing it, the emissions are reduced but investments are needed to equiped the campus with other heating technologies. 

Overall except on the 3rd case (emission factor reduction) it is always a trade-off between TOTEX and emissions.
Do they have unlimited founding to reduce their emissions? In that case removing boiler and other equipment requiring use of gas would be the best solution. 
Or instead, is the budget limited and in that case it would be better to assume gas price are higher like in the first sensitivity analysis to reduce emissions while keeping a reasonable TOTEX. 
Finally if Switzerland decides to reduce its electricity carbon footprint, it would overall be the best solutions for the campus to save money while have a lower carbon footprint.