# Energy system optimization

```{r, echo=F, results='hide',label='activate venv'}
#path <- file.path('./venv/bin/python')
library(reticulate)
#use_python(path)
use_virtualenv('./venv', required=FALSE)
```

```{python, echo=F, results='hide', label='load data'}
import matplotlib
matplotlib.use('Agg')
#import codes_01_energy_demand.NR_functions as fct1
#import codes_03_HP_modeling.Regression_Mirco.carnot_regression as fct2
#from codes_01_energy_demand.NR_functions import WeatherClustering

import codes_04_energy_system_integration.functions as fct3
import numpy as np; from numpy import matlib
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats
from sklearn.cluster import KMeans, SpectralClustering, AgglomerativeClustering
import os
import plotly.express as px
import plotly.graph_objects as go
from IPython.display import display, HTML
import amplpy
from amplpy import AMPL, DataFrame
import sys
import re
import glob
from enum import Enum
```
```{python, echo=F, eval=T, label=import_classes}
class criteria(Enum):
    OPEX = 'OPEX'
    CAPEX = 'CAPEX'
    Emissions = 'Emissions'
    TOTEX = 'TOTEX'
    parametric = 'parametric'

class criteria1(Enum):
    OPEX = 'OPEX'
    CAPEX = 'CAPEX'
    Emissions = 'Emissions'
    TOTEX = 'TOTEX'
    parametric = 'parametric'

class criteria2(Enum):
    OPEX = 'OPEX'
    CAPEX = 'CAPEX'
    Emissions = 'Emissions'
    TOTEX = 'TOTEX'
    parametric = 'parametric'
```

### Example 1 
I want to optimize the operational cost, and I know that NatGas will cost 0.32. What will be the Investment costs? and what technology will be used?

```{python, echo=F, eval=T,label= optimize_OPEX, results='hide'}

data=fct3.optimize(criteria=criteria.OPEX,NatGasGrid=0.32)
```

```{python, echo=F, eval=T,label= diplay_optimize_OPEX}
print("The technologies used are:")
print(data['use'][data['use']!=0].dropna().index.values)

print("The investment cost is %.3e [CHF/yr]" %(data['InvCost'].values[0][0]))
```

### Example 2
I want to draw the pareto front between TOTEX and Emissions

```{python, echo=F, eval=T,label= get_pareto, results='hide'}
TOTEX,EMISSIONS=fct3.get_pareto(criteria1.TOTEX,criteria2.Emissions,n=30)
```

```{python, echo=F, eval=T,label= draw_pareto}
fct3.draw_pareto(TOTEX,EMISSIONS,"TOTEX [CHF/yr]", "Emissions [gCO2/yr]")
```
<!-- Here you report about your energy systems optimization. This is the last part of the discussion where you wrap-up everything you did. -->
